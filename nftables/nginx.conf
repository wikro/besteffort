user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  default_type application/octet-stream;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  sendfile on;

  root /var/www/html;

  upstream pocketbase {
    server 127.0.0.1:8090;
  }

  upstream healthpack {
    server 127.0.0.1:8090;
  }
  
  upstream prometheus {
    server 127.0.0.1:9090;
  }
  
  upstream alertmanager {
    server 127.0.0.1:9093;
  }

  upstream ghost {
    server 127.0.0.1:2368;
  }

  upstream directus {
    server 127.0.0.1:8055;
  }

  server {
    listen 127.0.0.1:8080;
    listen [::1]:8080;

    server_name _;

    charset utf-8;

    location = /stub_status {
      stub_status;
    }
  }

  server {
    listen 80;
    listen [::]:80;

    server_name _;

    charset utf-8;

    location ~ ^/.well-known {
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name dc3.se;

    try_files $uri $uri/ =404;

    ssl_certificate /etc/letsencrypt/live/dc3.se/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dc3.se/privkey.pem;

    charset utf-8;

    index index.html;

    location / {
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name ~^(?<backend>[^\.]+)(\.[^\.]+)+$;

    try_files $uri $uri/ =404;

    ssl_certificate /etc/letsencrypt/live/dc3.se/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dc3.se/privkey.pem;

    charset utf-8;

    index index.html;

    location / {
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header Connection '';

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://$backend;
    }
  }
}
